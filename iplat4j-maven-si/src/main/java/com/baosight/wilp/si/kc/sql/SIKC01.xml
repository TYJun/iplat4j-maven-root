<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">	
<sqlMap namespace="SIKC01">

	<select id="query" parameterClass="java.util.HashMap" 
			resultClass="com.baosight.wilp.si.kc.domain.SiStorge">
		SELECT
				REC_CREATOR	as "recCreator",  <!-- 记录创建责任者 -->
				REC_CREATE_TIME	as "recCreateTime",  <!-- 记录创建时间 -->
				REC_REVISOR	as "recRevisor",  <!-- 记录修改责任者 -->
				REC_REVISE_TIME	as "recReviseTime",  <!-- 记录修改时间 -->
				ARCHIVE_FLAG	as "archiveFlag",  <!-- 归档标记 -->
				ID	as "id",  <!-- 主键 -->
				WARE_HOUSE_NO	as "wareHouseNo",  <!-- 仓库号 -->
				ware_house_name	as "wareHouseName",  <!-- 仓库名称 -->
				STORAGE_NO	as "storageNo",  <!-- 库位号 -->
				STACK_NO	as "stackNo",  <!-- 货位号 -->
				MAT_TYPE_NUM	as "matTypeNum",  <!-- 物资分类编码 -->
				mat_type_name	as "matTypeName",  <!-- 物资分类名称 -->
				MAT_NUM	as "matNum",  <!-- 物资编码 -->
				MAT_NAME	as "matName",  <!-- 物资名称 -->
				MAT_MODEL	as "matModel",  <!-- 物资型号 -->
				MAT_SPEC	as "matSpec",  <!-- 物资规格 -->
				UNIT	as "unit",  <!-- 计量单位编码 -->
				UNIT_NAME	as "unitName",  <!-- 计量单位名称 -->
				TOTAL_NUM	as "totalNum",  <!-- 库存总量 -->
				TOTAL_AMOUNT	as "totalAmount",  <!-- 库存总价 -->
				BATCH_NO	as "batchNo",  <!-- 批次编码 -->
				MIN_NUM	as "minNum",  <!-- 最低库存量 -->
				MAX_NUM	as "maxNum",  <!-- 最高库存量 -->
				PRICE	as "price",  <!-- 单价 -->
				remind_flag	as "remindFlag",  <!-- 是否预警标记，N=不预警，Y=预警 -->
				bill_checker_name	as "billCheckerName",  <!-- 审核人员姓名 -->
				bill_maker_name	as "billMakerName",  <!-- 制单人员姓名 -->
				enter_type_name	as "enterTypeName",  <!-- 入库类型名称 -->
				origin_bill_type_name	as "originBillTypeName",  <!-- 来源单据类型名称 -->
				surp_num	as "surpNum",  <!-- 供应商编码 -->
				surp_name	as "surpName" <!-- 供应商名称 -->
		FROM si_storge WHERE 1=1
		<isNotEmpty prepend=" AND " property="id">  <!-- 主键 -->
			ID = #id#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="ids">  <!-- 主键 -->
			ID in
			<iterate property="ids" open="(" conjunction="," close=")">
				#ids[]#
			</iterate>
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="wareHouseNo"> <!-- 仓库号 -->
			WARE_HOUSE_NO = #wareHouseNo#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="wareHouseNos"> <!-- 仓库号 -->
			WARE_HOUSE_NO in
			<iterate property="wareHouseNos" open="(" conjunction="," close=")">
				#wareHouseNos[]#
			</iterate>
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matNum"> <!-- 物资编码 -->
			MAT_NUM like concat('%', #matNum#, '%') 
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matNumEQ"> <!-- 物资编码(精确) -->
			MAT_NUM = #matNumEQ#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matName"> <!-- 物资名称 -->
			MAT_NAME like concat('%', #matName#, '%') 
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matTypeNums"> <!-- 物资分类编码字符串 -->
			find_in_set(MAT_TYPE_NUM, #matTypeNums#) 
		</isNotEmpty>
		<isEqual prepend=" AND " property="isNot0" compareValue="N"> <!--  是否显示0库存 -->
			TOTAL_NUM > 0
		</isEqual>
		<isEqual prepend=" AND " property="earlyWarning" compareValue="Y"> <!--  显示设置了预警值的物资 -->
			(MIN_NUM > 0 or MAX_NUM > 0)
		</isEqual>
		<isEqual prepend=" AND " property="earlyWarning" compareValue="N"> <!--  显示没有设置预警值的物资 -->
			(MIN_NUM = 0 and MAX_NUM = 0)
		</isEqual>
		<isEqual prepend=" AND " property="warningStock" compareValue="Y"> <!--  是否是报警数据 -->
			(MIN_NUM > TOTAL_NUM or MAX_NUM <![CDATA[<]]> TOTAL_NUM)
		</isEqual>
		<isNotEmpty prepend=" AND " property="dataGroupCode">
			DATA_GROUP_CODE = #dataGroupCode#
		</isNotEmpty>
		<dynamic prepend="ORDER BY">
	         <isNotEmpty property="orderBy">
	    		  $orderBy$
	   		 </isNotEmpty>
	   		<isEmpty property="orderBy">
	    		  MAT_NUM asc
			</isEmpty>
  		</dynamic>
	</select>

	<select id="count" resultClass="int">
		SELECT COUNT(*) FROM si_storge WHERE 1=1
		<isNotEmpty prepend=" AND " property="id">  <!-- 主键 -->
			ID = #id#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="wareHouseNo"> <!-- 仓库号 -->
			WARE_HOUSE_NO = #wareHouseNo#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="wareHouseNos"> <!-- 仓库号 -->
			WARE_HOUSE_NO in
			<iterate property="wareHouseNos" open="(" conjunction="," close=")">
				#wareHouseNos[]#
			</iterate>
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matNum"> <!-- 物资编码 -->
			MAT_NUM like concat('%', #matNum#, '%') 
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matNumEQ"> <!-- 物资编码(精确) -->
			MAT_NUM = #matNumEQ#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matName"> <!-- 物资名称 -->
			MAT_NAME like concat('%', #matName#, '%') 
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matTypeNums"> <!-- 物资分类编码字符串 -->
			find_in_set(MAT_TYPE_NUM, #matTypeNums#) 
		</isNotEmpty>
		<isEqual prepend=" AND " property="isNot0" compareValue="N"> <!--  是否显示0库存 -->
			TOTAL_NUM > 0
		</isEqual>
		<isEqual prepend=" AND " property="earlyWarning" compareValue="Y"> <!--  是否是库存预警页面 -->
			(MIN_NUM > 0 or MAX_NUM > 0)
		</isEqual>
		<isEqual prepend=" AND " property="warningStock" compareValue="Y"> <!--  是否是报警数据 -->
			(MIN_NUM > TOTAL_NUM or MAX_NUM <![CDATA[<]]> TOTAL_NUM)
		</isEqual>
		<isNotEmpty prepend=" AND " property="dataGroupCode">
			DATA_GROUP_CODE = #dataGroupCode#
		</isNotEmpty>
	</select>

	<select id="newQuery" parameterClass="java.util.HashMap" resultClass="com.baosight.wilp.si.kc.domain.SiStorge">
		SELECT
			sd.REC_CREATOR	as "recCreator",  <!-- 记录创建责任者 -->
			sd.REC_CREATE_TIME	as "recCreateTime",  <!-- 记录创建时间 -->
			sd.REC_REVISOR	as "recRevisor",  <!-- 记录修改责任者 -->
			sd.REC_REVISE_TIME	as "recReviseTime",  <!-- 记录修改时间 -->
			sd.ARCHIVE_FLAG	as "archiveFlag",  <!-- 归档标记 -->
			sd.ID	as "id",  <!-- 主键 -->
			sd.WARE_HOUSE_NO	as "wareHouseNo",  <!-- 仓库号 -->
			sd.ware_house_name	as "wareHouseName",  <!-- 仓库名称 -->
			sd.STORAGE_NO	as "storageNo",  <!-- 库位号 -->
			sd.STACK_NO	as "stackNo",  <!-- 货位号 -->
			sd.MAT_TYPE_NUM	as "matTypeNum",  <!-- 物资分类编码 -->
			sd.mat_type_name	as "matTypeName",  <!-- 物资分类名称 -->
			sd.mat_num	as "matNum",  <!-- 物资编码 -->
			sd.MAT_NAME	as "matName",  <!-- 物资名称 -->
			sd.MAT_MODEL	as "matModel",  <!-- 物资型号 -->
			sd.MAT_SPEC	as "matSpec",  <!-- 物资规格 -->
			sd.UNIT	as "unit",  <!-- 计量单位编码 -->
			sd.UNIT_NAME	as "unitName",  <!-- 计量单位名称 -->
			sum(sd.enter_num)	as "totalNum",  <!-- 库存总量 -->
			sum(sd.enter_amount)	as "totalAmount",  <!-- 库存总价 -->
			sd.BATCH_NO	as "batchNo",  <!-- 批次编码 -->
			s.MIN_NUM	as "minNum",  <!-- 最低库存量 -->
			s.MAX_NUM	as "maxNum",  <!-- 最高库存量 -->
			sd.enter_price	as "price",  <!-- 单价 -->
			s.remind_flag	as "remindFlag",  <!-- 是否预警标记，N=不预警，Y=预警 -->
			s.bill_checker_name	as "billCheckerName",  <!-- 审核人员姓名 -->
			s.bill_maker_name	as "billMakerName",  <!-- 制单人员姓名 -->
			s.enter_type_name	as "enterTypeName",  <!-- 入库类型名称 -->
			s.origin_bill_type_name	as "originBillTypeName",  <!-- 来源单据类型名称 -->
			sd.surp_num	as "surpNum",  <!-- 供应商编码 -->
			sd.surp_name	as "surpName" <!-- 供应商名称 -->
		FROM si_storge s
		LEFT JOIN si_storge_detail sd ON s.mat_num = sd.mat_num
		WHERE s.mat_type_num = sd.mat_type_num
		<isNotEmpty prepend=" AND " property="id">  <!-- 主键 -->
			s.ID = #id#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="ids">  <!-- 主键 -->
			s.ID in
			<iterate property="ids" open="(" conjunction="," close=")">
				#ids[]#
			</iterate>
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="wareHouseNo"> <!-- 仓库号 -->
			sd.WARE_HOUSE_NO = #wareHouseNo#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="wareHouseNos"> <!-- 仓库号 -->
			sd.WARE_HOUSE_NO in
			<iterate property="wareHouseNos" open="(" conjunction="," close=")">
				#wareHouseNos[]#
			</iterate>
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matNum"> <!-- 物资编码 -->
			s.MAT_NUM like concat('%', #matNum#, '%')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matNumEQ"> <!-- 物资编码(精确) -->
			s.MAT_NUM = #matNumEQ#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matName"> <!-- 物资名称 -->
			s.MAT_NAME like concat('%', #matName#, '%')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matTypeNums"> <!-- 物资分类编码字符串 -->
			find_in_set(s.MAT_TYPE_NUM, #matTypeNums#)
		</isNotEmpty>
		<isEqual prepend=" AND " property="isNot0" compareValue="N"> <!--  是否显示0库存 -->
			s.TOTAL_NUM > 0
		</isEqual>
		<isEqual prepend=" AND " property="earlyWarning" compareValue="Y"> <!--  显示设置了预警值的物资 -->
			(s.MIN_NUM > 0 or s.MAX_NUM > 0)
		</isEqual>
		<isEqual prepend=" AND " property="earlyWarning" compareValue="N"> <!--  显示没有设置预警值的物资 -->
			(s.MIN_NUM = 0 and s.MAX_NUM = 0)
		</isEqual>
		<isEqual prepend=" AND " property="warningStock" compareValue="Y"> <!--  是否是报警数据 -->
			(s.MIN_NUM > s.TOTAL_NUM or s.MAX_NUM <![CDATA[<]]> s.TOTAL_NUM)
		</isEqual>
		<isNotEmpty prepend=" AND " property="dataGroupCode">
			s.DATA_GROUP_CODE = #dataGroupCode#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="surpName" > <!--  供应商查询 -->
			sd.surp_name like concat('%', #surpName#, '%')
		</isNotEmpty>
		group by s.MAT_NUM
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="orderBy">
				$orderBy$
			</isNotEmpty>
			<isEmpty property="orderBy">
				s.MAT_NUM asc
			</isEmpty>
		</dynamic>
	</select>

	<!-- 判断库存中是否存在指定物资 -->
	<select id="isExistMat" parameterClass="java.util.Map" resultClass="int">
		select count(1) from si_storge where MAT_NUM = #matNum# and WARE_HOUSE_NO = #wareHouseNo#
	</select>
	
	<insert id="insert" parameterClass="com.baosight.wilp.si.kc.domain.SiStorge">
		INSERT INTO si_storge (REC_CREATOR,  <!-- 记录创建责任者 -->
										REC_CREATE_TIME,  <!-- 记录创建时间 -->
										REC_REVISOR,  <!-- 记录修改责任者 -->
										REC_REVISE_TIME,  <!-- 记录修改时间 -->
										DATA_GROUP_CODE,  <!-- 院区 -->
										ARCHIVE_FLAG,  <!-- 归档标记 -->
										ID,  <!-- 主键 -->
										WARE_HOUSE_NO,  <!-- 仓库号 -->
										ware_house_name,  <!-- 仓库名称 -->
										STORAGE_NO,  <!-- 库位号 -->
										STACK_NO,  <!-- 货位号 -->
										MAT_TYPE_NUM,  <!-- 物资分类编码 -->
										mat_type_name,  <!-- 物资分类名称 -->
										MAT_NUM,  <!-- 物资编码 -->
										MAT_NAME,  <!-- 物资名称 -->
										MAT_MODEL,  <!-- 物资型号 -->
										MAT_SPEC,  <!-- 物资规格 -->
										UNIT,  <!-- 计量单位编码 -->
										UNIT_NAME,  <!-- 计量单位名称 -->
										TOTAL_NUM,  <!-- 库存总量 -->
										TOTAL_AMOUNT,  <!-- 库存总价 -->
										BATCH_NO,  <!-- 批次编码 -->
										MIN_NUM,  <!-- 最低库存量 -->
										MAX_NUM,  <!-- 最高库存量 -->
										PRICE,  <!-- 单价 -->
										remind_flag,  <!-- 是否预警标记，N=不预警，Y=预警 -->
										bill_checker_name,  <!-- 审核人员姓名 -->
										bill_maker_name,  <!-- 制单人员姓名 -->
										enter_type_name,  <!-- 入库类型名称 -->
										origin_bill_type_name,  <!-- 来源单据类型名称 -->
										surp_num,  <!-- 供应商编码 -->
										surp_name  <!-- 供应商名称 -->
										)		 
	    VALUES (#recCreator#, #recCreateTime#, #recRevisor#, #recReviseTime#, #dataGroupCode#, #archiveFlag#, #id#, #wareHouseNo#, #wareHouseName#, #storageNo#, #stackNo#, #matTypeNum#, #matTypeName#, #matNum#, #matName#, #matModel#, #matSpec#, #unit#, #unitName#, #totalNum#, #totalAmount#, #batchNo#, #minNum#, #maxNum#, #price#, #remindFlag#, #billCheckerName#, #billMakerName#, #enterTypeName#, #originBillTypeName#, #surpNum#, #surpName#) 
	</insert>
  
	<update id="update" parameterClass="com.baosight.wilp.si.kc.domain.SiStorge">
		UPDATE si_storge 
		<dynamic prepend="set">
			<isNotNull prepend="," property="recRevisor">
				REC_REVISOR	= #recRevisor#   <!-- 记录修改责任者 -->  
			</isNotNull>
			<isNotNull prepend="," property="recReviseTime">
				REC_REVISE_TIME	= #recReviseTime#   <!-- 记录修改时间 --> 
			</isNotNull>
			<!--<isNotNull prepend="," property="price">
				PRICE = IF(PRICE > #price#, #price#, PRICE)
			</isNotNull>-->
		    <isGreaterThan prepend="," property="price" compareValue="0">
				PRICE = IF(PRICE > #price#, #price#, PRICE)
			</isGreaterThan>
			<isNotNull prepend="," property="totalNum">
				TOTAL_NUM = TOTAL_NUM + #totalNum#   <!-- 库存总量 -->  
			</isNotNull>
			<isNotNull prepend="," property="totalAmount">
				TOTAL_AMOUNT = TOTAL_AMOUNT + #totalAmount#   <!-- 库存总价 -->
			</isNotNull>
		</dynamic>
		WHERE WARE_HOUSE_NO	= #wareHouseNo# and MAT_NUM = #matNum#
	</update>
	
	<update id="updateStorgeByReduce" parameterClass="java.util.Map">
		UPDATE si_storge 
		<dynamic prepend="set">
			<isNotNull prepend="," property="recRevisor">
				REC_REVISOR	= #recRevisor#   <!-- 记录修改责任者 -->  
			</isNotNull>
			<isNotNull prepend="," property="recReviseTime">
				REC_REVISE_TIME	= #recReviseTime#   <!-- 记录修改时间 --> 
			</isNotNull>
			<isNotNull prepend="," property="totalNum">
				TOTAL_NUM = TOTAL_NUM - #totalNum#   <!-- 库存总量 -->   
			</isNotNull>
			<isNotNull prepend="," property="totalAmount">
				TOTAL_AMOUNT = TOTAL_AMOUNT - #totalAmount#   <!-- 库存总价 -->
			</isNotNull>
			<isNotNull prepend="," property="enterNum">
				TOTAL_NUM = TOTAL_NUM - #enterNum#   <!-- 库存总量 -->  
			</isNotNull>
			<isNotNull prepend="," property="enterAmount">
				TOTAL_AMOUNT = TOTAL_AMOUNT - #enterAmount#   <!-- 库存总价 -->  
			</isNotNull>
		</dynamic>
		WHERE WARE_HOUSE_NO	= #wareHouseNo# and MAT_NUM = #matNum#
	</update>

	<select id="exportData" parameterClass="java.util.HashMap" resultClass="java.util.LinkedHashMap">
		SELECT
			WARE_HOUSE_NO	as "wareHouseNo",  <!-- 仓库号 -->
			ware_house_name	as "wareHouseName",  <!-- 仓库名称 -->
			MAT_NUM	as "matNum",  <!-- 物资编码 -->
			MAT_NAME	as "matName",  <!-- 物资名称 -->
			mat_type_name	as "matTypeName",  <!-- 物资分类名称 -->
			MAT_SPEC	as "matSpec",  <!-- 物资规格 -->
			MAT_MODEL	as "matModel",  <!-- 物资型号 -->
			UNIT_NAME	as "unitName",  <!-- 计量单位名称 -->
			TOTAL_NUM	as "totalNum",  <!-- 库存总量 -->
			PRICE	as "price",  <!-- 单价 -->
			TOTAL_AMOUNT	as "totalAmount",  <!-- 库存总价 -->
			MIN_NUM	as "minNum",  <!-- 最低库存量 -->
			MAX_NUM	as "maxNum"  <!-- 最高库存量 -->
		FROM si_storge WHERE 1=1
		<isNotEmpty prepend=" AND " property="wareHouseNo"> <!-- 仓库号 -->
			WARE_HOUSE_NO = #wareHouseNo#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matNum"> <!-- 物资编码 -->
			MAT_NUM like concat('%', #matNum#, '%')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matName"> <!-- 物资名称 -->
			MAT_NAME like concat('%', #matName#, '%')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matTypeNums"> <!-- 物资分类编码字符串 -->
			find_in_set(MAT_TYPE_NUM, #matTypeNums#)
		</isNotEmpty>
		<isEqual prepend=" AND " property="isNot0" compareValue="N"> <!--  是否显示0库存 -->
			TOTAL_NUM > 0
		</isEqual>
		<isEqual prepend=" AND " property="earlyWarning" compareValue="Y"> <!--  显示设置了预警值的物资 -->
			(MIN_NUM > 0 or MAX_NUM > 0)
		</isEqual>
		<isEqual prepend=" AND " property="earlyWarning" compareValue="N"> <!--  显示没有设置预警值的物资 -->
			(MIN_NUM = 0 and MAX_NUM = 0)
		</isEqual>
		<isEqual prepend=" AND " property="warningStock" compareValue="Y"> <!--  是否是报警数据 -->
			(MIN_NUM > TOTAL_NUM or MAX_NUM <![CDATA[<]]> TOTAL_NUM)
		</isEqual>
		<isNotEmpty prepend=" AND " property="dataGroupCode">
			DATA_GROUP_CODE = #dataGroupCode#
		</isNotEmpty>
		ORDER BY mat_type_name,MAT_NUM asc
	</select>

	<!--查询库存总价和库存总量-->
	<select id="countNumAndSum" parameterClass="java.util.HashMap" resultClass="com.baosight.wilp.si.kc.domain.SiStorge">
		SELECT if(sum(a.TOTAL_NUM) is null,0,sum(a.TOTAL_NUM)) totalNum,
		       if(sum(a.TOTAL_AMOUNT) is null,0,sum(a.TOTAL_AMOUNT)) totalAmount
		FROM si_storge a
		WHERE 1=1
		<isNotEmpty prepend=" AND " property="id">  <!-- 主键 -->
			a.ID = #id#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="ids">  <!-- 主键 -->
			a.ID in
			<iterate property="ids" open="(" conjunction="," close=")">
				#ids[]#
			</iterate>
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="wareHouseNo"> <!-- 仓库号 -->
			a.WARE_HOUSE_NO = #wareHouseNo#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matNum"> <!-- 物资编码 -->
			a.MAT_NUM like concat('%', #matNum#, '%')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matNumEQ"> <!-- 物资编码(精确) -->
			a.MAT_NUM = #matNumEQ#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matName"> <!-- 物资名称 -->
			a.MAT_NAME like concat('%', #matName#, '%')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matTypeNums"> <!-- 物资分类编码字符串 -->
			find_in_set(a.MAT_TYPE_NUM, #matTypeNums#)
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matTypeNum"> <!-- 物资分类编码字符串 -->
			find_in_set(a.mat_type_num,(SELECT mat_class_code FROM bona_frame_mzsrmyy.ac_material_class WHERE id = #matTypeNum#))
		</isNotEmpty>
		<isEqual prepend=" AND " property="isNot0" compareValue="N"> <!--  是否显示0库存 -->
			a.TOTAL_NUM > 0
		</isEqual>
		<isEqual prepend=" AND " property="earlyWarning" compareValue="Y"> <!--  显示设置了预警值的物资 -->
			(a.MIN_NUM > 0 or a.MAX_NUM > 0)
		</isEqual>
		<isEqual prepend=" AND " property="earlyWarning" compareValue="N"> <!--  显示没有设置预警值的物资 -->
			(a.MIN_NUM = 0 and a.MAX_NUM = 0)
		</isEqual>
		<isEqual prepend=" AND " property="warningStock" compareValue="Y"> <!--  是否是报警数据 -->
			(a.MIN_NUM > a.TOTAL_NUM or a.MAX_NUM <![CDATA[<]]> a.TOTAL_NUM)
		</isEqual>
		<isNotEmpty prepend=" AND " property="dataGroupCode">
			a.DATA_GROUP_CODE = #dataGroupCode#
		</isNotEmpty>
	</select>
</sqlMap>