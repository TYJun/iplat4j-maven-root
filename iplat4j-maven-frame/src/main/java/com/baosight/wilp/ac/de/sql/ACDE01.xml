<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="ACDE01">

    <!-- 查询科室列表 -->
	<select id="queryDeptList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT t.* FROM (
				SELECT ad.id AS "id",
						ad.dept_num AS "deptNum",
						ad.dept_name AS "deptName",
						ad.parent_id AS "parentId",
						ade.dept_name AS "parentDeptName",
						ad.fina_code AS "finaCode",
						ad.erp_code AS "erpCode",
						ad.dept_describe AS "deptDescribe",
						ad.type AS "type",
						ad.source,
						(CASE WHEN ad.source = '1'  THEN '钉钉' 
						 	  WHEN ad.source = '2'  THEN '企业微信' 
							  ELSE '平台'
						 END) AS "sourceName", 
						ad.rec_create_time AS "recCreateTime",
						(CASE WHEN ad.type = '1'
									THEN '是' 
						      ELSE '否'
						 END) AS "isService",
				       	(select dept_name  from $projectSchema$.ac_department where dept_num = ad.hospital_district limit 1) hospitalDistrict,
						(CASE WHEN ad.status = '0'
									THEN '停用'
						      else '启用'
						 END) AS "status",
						ad.biz_id as bizId,
			        	ad.dict_type as dictType,
			            ad.dep_category_name as depCategoryName,
			            ad.dep_category_code as depCategoryCode
				 FROM $projectSchema$.ac_department ad
				 LEFT JOIN $projectSchema$.ac_department ade ON ade.id = ad.parent_id
		    ) t
			WHERE 1=1
			<isNotEmpty prepend="and" property="id">
				t.id = #id#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="source">
				t.source = #source#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="status">
				t.status = #status#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="dictType">
				t.dictType = #dictType#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="depCategoryCode">
				t.depCategoryCode = #depCategoryCode#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="parentId">
				t.parentId =#parentId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="deptNum">
				t.deptNum like concat('%',#deptNum#,'%')
			</isNotEmpty>
			<isNotEmpty prepend="and" property="deptName">
				t.deptName like concat('%',#deptName#,'%')
			</isNotEmpty>

			<isNotEmpty prepend="and" property="list">
         	 	 t.id in  
       		   <iterate  open="("  close=")"  conjunction="," property="list">
                       #list[].dept_id#
               </iterate>   
          	</isNotEmpty>
          	
          	order by CONVERT( t.deptName USING gbk ) COLLATE gbk_chinese_ci ASC
		
	</select>

	<select id="queryDeptInfoByNum" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select dept_num deptNum, dept_name deptName
		from $projectSchema$.ac_department
		where
		dept_num in
		<iterate  open="("  close=")"  conjunction="," property="list">
			#list[]#
		</iterate>
	</select>

	<select id="queryDeptInfoByNumCount" parameterClass="java.util.HashMap" resultClass="int">
		select count(1)
		from $projectSchema$.ac_department
		where
		dept_num in
		<iterate  open="("  close=")"  conjunction="," property="list">
			#list[]#
		</iterate>
	</select>
					
	<!-- 查询科室列数量 -->			
	<select id="queryDeptListCount" parameterClass="java.util.HashMap" resultClass="int">
			select COUNT(t.id) from (
				SELECT ad.id AS "id",
				ad.dept_num AS "deptNum",
				ad.dept_name AS "deptName",
				ad.parent_id AS "parentId",
				ade.dept_name AS "parentDeptName",
				ad.fina_code AS "finaCode",
				ad.erp_code AS "erpCode",
				ad.dept_describe AS "deptDescribe",
				ad.type AS "type",
				ad.rec_create_time AS "recCreateTime",
				(CASE WHEN ad.type = '1'
				THEN '是'
				ELSE '否'
				END) AS "isService",
				(select dept_name  from $projectSchema$.ac_department where dept_num = ad.hospital_district limit 1) hospitalDistrict,
				(CASE WHEN ad.status = '0'
				THEN '停用'
				else '启用'
				END) AS "status"
				FROM $projectSchema$.ac_department ad
				LEFT JOIN $projectSchema$.ac_department ade ON ade.id = ad.parent_id
			) t
			WHERE 1=1
			<isNotEmpty prepend=" AND " property="status">
				t.status = #status#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="parentId">
				t.parentId =#parentId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="deptNum">
				t.deptNum =#deptNum#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="deptName">
				t.deptName like concat('%',#deptName#,'%')
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="list">
         	 	 t.id in  
       		   <iterate  open="("  close=")"  conjunction="," property="list">
                       #list[].dept_id#
               </iterate>   
          	</isNotEmpty>
			
	</select>
	
	<select id="queryDeptTree" resultClass="java.util.HashMap">
			SELECT t.* from (
				SELECT id AS "label",
				   dept_num AS "deptNum",
				   dept_name AS "deptName",
				   parent_id AS "pId"
				FROM $projectSchema$.ac_department
				WHERE status = '1'
				ORDER BY id
			) t
			WHERE 1=1
			<isNotEmpty prepend=" AND " property="node">
				t.pId = #node#
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="deptList">
             t.label in  
	            <iterate  open="("  close=")"  conjunction="," property="deptList">
	                #deptList[].id#
	            </iterate>   
            </isNotEmpty>
            order by CONVERT( t.deptName USING gbk ) COLLATE gbk_chinese_ci ASC
	</select>

	<select id="queryLastDeptNum" parameterClass="java.util.HashMap" 
		resultClass="java.util.HashMap">
		SELECT dept_num as "deptNum"
		FROM $projectSchema$.ac_department
		where dept_num like 'NO%' AND LENGTH(dept_num) = 7
		ORDER BY rec_create_time DESC,dept_num DESC
		LIMIT 1
	</select>
	
<!--	<delete id="delete" parameterClass="java.util.List">-->
<!--		DELETE FROM $projectSchema$.ac_department WHERE id IN -->
<!--		<iterate conjunction="," open="(" close=")">-->
<!--			#[]#-->
<!--		</iterate>-->
<!--	</delete>-->

	<update id="startUsing" parameterClass="java.util.HashMap">
		UPDATE $projectSchema$.ac_department SET status = 1 WHERE id IN
		<iterate conjunction="," open="(" close=") " property="list">
			#list[]#
		</iterate>
	</update>

	<update id="stopUsing" parameterClass="java.util.HashMap">
		UPDATE $projectSchema$.ac_department SET status = 0 WHERE id IN
		<iterate conjunction="," open="(" close=")" property="list">
			#list[]#
		</iterate>
	</update>

	<select id="getTrueOrFalse" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT dept_id FROM $projectSchema$.ac_personnel WHERE status = 1 AND dept_id IN
		<iterate conjunction="," open="(" close=")" property="list">
			#list[]#
		</iterate>
	</select>


	<insert id="importDeptFromExcel" parameterClass="java.util.HashMap">

		INSERT INTO $projectSchema$.ac_department (
			dept_num,  <!-- 科室编码 -->
			dept_name,  <!-- 科室名称 -->
			parent_id,  <!-- 父ID -->
			fina_code,  <!-- 财务编码 -->
			erp_code,  <!-- ERP编码 -->
			dept_describe,  <!-- 科室描述 -->
			`type`,  <!-- 科室类型 -->
			status,  <!-- 科室状态 -->
			rec_creater,  <!-- 创建人 -->
			rec_create_time,  <!-- 创建时间 -->
			id  <!-- 主键 -->
		)VALUES
		<iterate open="" close="" conjunction="," property="list">
			(#list[].deptNum#,
			#list[].deptName#,
			case #list[].parentId#
			when 'root' then 'root'
			else (select a.id from (select id from $projectSchema$.ac_department where dept_num = #list[].parentId#) a )
			end,
			#list[].finaCode#,
			#list[].erpCode#,
			#list[].deptDescribe#,
			#list[].type#,
			#list[].status#,
			#list[].recCreater#,
			#list[].recCreateTime#,
			#list[].id#)
		</iterate>
	</insert>

	<select id="countDeptNum" parameterClass="java.util.HashMap" resultClass="int">
		select count(1) from $projectSchema$.ac_department
		where
		1 = 1
		<isNotEmpty prepend=" AND " property="deptNum">
			dept_num = #deptNum#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="parentId">
			dept_num = #parentId#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="deptId">
			id = #deptId#
		</isNotEmpty>
	</select>
	
	<!-- 查询科室列表 -->
	<select id="getDeptList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 SELECT ad.id AS "id",
				ad.dept_num AS "deptNum",
				ad.dept_name AS "deptName",
				ad.parent_id AS "parentId"
		 FROM $projectSchema$.ac_department ad
		 WHERE ad.status = '1'
	</select>
	
	<select id="isExistRoleBind" parameterClass="java.util.HashMap" resultClass="int">
		SELECT count(1) FROM $projectSchema$.ac_rd WHERE dept_id IN
		<iterate close=")" open="(" conjunction="," property="list">
			#list[]#
		</iterate>
	</select>

	<select id="queryAlldeptNum" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 	dept_num  FROM  $projectSchema$.ac_department
	</select>
	
	<insert id="insertDingDept" parameterClass="java.util.HashMap">
		INSERT INTO $projectSchema$.ac_department (
			dept_num,  <!-- 科室编码 -->
			dept_name,  <!-- 科室名称 -->
			parent_id,  <!-- 父ID -->
			<!--fina_code,   财务编码 -->
			<!--erp_code,   ERP编码 -->
			<!--dept_describe,   科室描述 -->
			`type`,  <!-- 科室类型 -->
			status,  <!-- 科室状态 -->
			source,  <!-- 出处 -->
			rec_creater,  <!-- 创建人 -->
			rec_create_time,  <!-- 创建时间 -->
			id  <!-- 主键 -->
		)VALUES
		<iterate open="" close="" conjunction="," property="list">
			(#list[].deptNum#,
			 #list[].name#,
			 <!--case #list[].parentid# when '1' then 'root' else #list[].parentid# end,-->
			 #list[].parentid#,
			 <!--#list[].finaCode#,-->
			 <!--#list[].erpCode#,-->
			 <!--#list[].deptDescribe#,-->
			 #list[].type#,
			 #list[].status#,
			 #list[].source#,
			 #list[].recCreater#,
			 #list[].recCreateTime#,
			 #list[].id#)
		</iterate>
	</insert>
	
	<!-- <update id="updateDingDept" parameterClass="java.util.HashMap">
	
		<iterate open="" close="" conjunction="" property="list">
			UPDATE $projectSchema$.ac_department 
			SET 
				dept_num = #list[].deptNum#,
				dept_name = #list[].name#,
				parent_id = #list[].parentid#,
				status = #list[].status#,
				source = #list[].source#,
				rec_revisor = #list[].recRevisor#,
				rec_revise_time = #list[].recReviseTime#
			WHERE id = #list[].id#
		</iterate>
		
	</update> -->
	
	<update id="updateDingDept" parameterClass="java.util.HashMap">
			UPDATE $projectSchema$.ac_department 
			SET 
				dept_num = #deptNum#,
				dept_name = #name#,
				parent_id = #parentid#,
				status = #status#,
				source = #source#,
				rec_revisor = #recRevisor#,
				rec_revise_time = #recReviseTime#
			WHERE id = #id#
	</update>
	
	<update id="stopDepartment" parameterClass="java.util.HashMap">
		UPDATE $projectSchema$.ac_department SET status = 0 WHERE id IN
		<iterate conjunction="," open="(" close=")" property="list">
			#list[].id#
		</iterate>
	</update>

</sqlMap>