<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="RMLJ01">

	<select id="query" parameterClass="java.util.HashMap" resultClass="com.baosight.wilp.rm.lj.domain.RmRequirePlan">
		SELECT
			p.id	as "id",  <!-- 主键 -->
			p.plan_no	as "planNo",  <!-- 需求计划单号 -->
			p.plan_time	as "planTime",  <!-- 需求计划时间(年份/年月/申请日期) -->
			p.plan_type	as "planType",  <!-- 计划类型 -->
			p.plan_type_name	as "planTypeName",  <!-- 计划类型名称 -->
			p.plan_num	as "planNum",  <!-- 年度计划物资总数 -->
			p.plan_cost	as "planCost",  <!-- 总金额 -->
			p.status_code	as "statusCode",  <!-- 状态编码 -->
			p.status_name	as "statusName",  <!-- 状态名称 -->
			p.dept_num	as "deptNum",  <!-- 需求科室编码(业务科室) -->
			p.dept_name	as "deptName",  <!-- 需求科室名称(业务科室) -->
			p.manage_dept_num	as "manageDeptNum",  <!-- 需求科室编码(管理科室) -->
			p.manage_dept_name	as "manageDeptName",  <!-- 需求科室名称(管理科室) -->
			p.dept_principal	as "deptPrincipal",  <!-- 科室负责人工号 -->
			p.dept_principal_name	as "deptPrincipalName",  <!-- 科室负责人姓名 -->
			p.remark	as "remark",  <!-- 备注/申请理由 -->
			p.plan_desc	as "planDesc",  <!--需求计划概述 -->
			p.rec_creator	as "recCreator",  <!-- 创建（申请）人 -->
			p.rec_creator_name	as "recCreatorName",  <!-- 创建（申请）人姓名 -->
			p.rec_create_time	as "recCreateTime",  <!-- 创建时间 -->
			DATE_FORMAT(p.rec_create_time, '%Y-%m-%d %H:%i:%s')	as "recCreateTimeStr",  <!-- 创建时间 -->
			p.rec_revisor	as "recRevisor",  <!-- 修改人 -->
			p.rec_revise_time	as "recReviseTime",  <!-- 修改时间 -->
			p.data_group_code	as "dataGroupCode",  <!-- 账套 -->
			p.archive_flag	as "archiveFlag", <!-- 归档标记 -->
		    a.reject_reason as "rejectReason" <!-- 驳回原因 -->
		FROM rm_require_plan p
		left join rm_approval a on a.relate_id = p.id and a.status = '1' and a.approval_result_code = '20'
		WHERE 1=1
		<isNotEmpty prepend=" AND " property="id">
			p.id = #id#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="planNo">
			p.plan_no like concat('%', #planNo#, '%')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="planNoEQ">
			p.plan_no = #planNoEQ#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="planTime">
			p.plan_time = #planTime#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="planType">
			p.plan_type = #planType#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="statusCode">
			p.status_code = #statusCode#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="deptNum">
			p.dept_num = #deptNum#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="deptNums">
			p.dept_num in
			<iterate property="deptNums" open="(" conjunction="," close=")">#deptNums[]#</iterate>
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="manageDeptNum">
			p.manage_dept_num = #manageDeptNum#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="recCreatorName">
			p.rec_creator_name like concat('%', #recCreatorName#, '%')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="beginTime">
			p.rec_create_time >= concat(#beginTime#,' 00:00:00')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="endTime">
			p.rec_create_time <![CDATA[<=]]> concat(#endTime#, ' 23:59:59')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="dataGroupCode">
			p.data_group_code = #dataGroupCode#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="planIds">
			p.id in
		  	<iterate property="planIds" open="(" conjunction="," close=")">
				#planIds[]#
			</iterate>
		</isNotEmpty>
		<dynamic prepend="ORDER BY">
         	<isNotEmpty property="orderBy">
    		  	$orderBy$
   		 	</isNotEmpty>
   			<isEmpty property="orderBy">
    		  	p.plan_no desc
			</isEmpty>
  		</dynamic>
	</select>

	<select id="count" resultClass="int">
		SELECT COUNT(*) FROM rm_require_plan WHERE 1=1
		<isNotEmpty prepend=" AND " property="id">
			id = #id#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="planNo">
			plan_no like concat('%', #planNo#, '%')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="planTime">
			plan_time = #planTime#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="planType">
			plan_type = #planType#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="statusCode">
			status_code = #statusCode#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="deptNum">
			dept_num = #deptNum#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="deptNums">
			p.dept_num in
			<iterate property="deptNums" open="(" conjunction="," close=")">#deptNums[]#</iterate>
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="manageDeptNum">
			manage_dept_num = #manageDeptNum#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="beginTime">
			rec_create_time >= concat(#beginTime#,' 00:00:00')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="endTime">
			rec_create_time <![CDATA[<=]]> concat(#endTime#, ' 23:59:59')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="dataGroupCode">
			data_group_code = #dataGroupCode#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="planIds">
			p.id in
			<iterate property="planIds" open="(" conjunction="," close=")">
				#planIds[]#
			</iterate>
		</isNotEmpty>
	</select>

	<insert id="insert" parameterClass="com.baosight.wilp.rm.lj.domain.RmRequirePlan">
		INSERT INTO rm_require_plan (
			id,  <!-- 主键 -->
			plan_no,  <!-- 需求计划单号 -->
			plan_time,  <!-- 需求计划时间(年份/年月/申请日期) -->
			plan_type,  <!-- 计划类型 -->
			plan_type_name,  <!-- 计划类型名称 -->
			plan_num,  <!-- 年度计划物资总数 -->
			plan_cost,  <!-- 总金额 -->
			status_code,  <!-- 状态编码 -->
			status_name,  <!-- 状态名称 -->
			dept_num,  <!-- 需求科室编码(业务科室) -->
			dept_name,  <!-- 需求科室名称(业务科室)-->
			manage_dept_num,  <!-- 需求科室编码(管理科室) -->
			manage_dept_name,  <!-- 需求科室名称(管理科室)-->
			dept_principal,  <!-- 科室负责人工号 -->
			dept_principal_name,  <!-- 科室负责人姓名 -->
			remark,  <!-- 备注/申请理由 -->
		    plan_desc, <!-- 需求计划概述 -->
			rec_creator,  <!-- 创建（申请）人 -->
			rec_creator_name,  <!-- 创建（申请）人姓名 -->
			rec_create_time,  <!-- 创建时间 -->
			rec_revisor,  <!-- 修改人 -->
			rec_revise_time,  <!-- 修改时间 -->
			data_group_code,  <!-- 账套 -->
			archive_flag  <!-- 归档标记 -->
		)
	    VALUES (#id#, #planNo#, #planTime#, #planType#, #planTypeName#, #planNum#, #planCost#, #statusCode#, #statusName#, #deptNum#, #deptName#, #manageDeptNum#, #manageDeptName#, #deptPrincipal#, #deptPrincipalName#, #remark#, #planDesc#, #recCreator#, #recCreatorName#, #recCreateTime#, #recRevisor#, #recReviseTime#, #dataGroupCode#, #archiveFlag#)
	</insert>
  
	<delete id="delete" parameterClass="string">
		DELETE FROM rm_require_plan WHERE id = #id# and status_code = '01'
	</delete>

	<update id="update" parameterClass="com.baosight.wilp.rm.lj.domain.RmRequirePlan">
		UPDATE rm_require_plan
		SET 
			<isNotEmpty property="planTime">plan_time = #planTime#, </isNotEmpty>  <!-- 需求计划时间(年份/年月/申请日期) -->
			<isGreaterThan property="planNum" compareValue="0">plan_num = #planNum#, </isGreaterThan>  <!-- 年度计划物资总数 -->
			<isGreaterThan property="planCost" compareValue="0">plan_cost = #planCost#, </isGreaterThan>  <!-- 总金额 -->
			<isNotEmpty property="statusCode">status_code = #statusCode#, </isNotEmpty>  <!-- 状态编码 -->
			<isNotEmpty property="statusName">status_name = #statusName#, </isNotEmpty>  <!-- 状态名称 -->
			<isNotEmpty property="deptPrincipal">dept_principal	= #deptPrincipal#, </isNotEmpty>  <!-- 科室负责人工号 -->
			<isNotEmpty property="deptPrincipalName">dept_principal_name = #deptPrincipalName#, </isNotEmpty>  <!-- 科室负责人姓名 -->
			<isNotEmpty property="remark">remark = #remark#, </isNotEmpty>  <!-- 备注/申请理由 -->
			<isNotEmpty property="planDesc">plan_desc = #planDesc#, </isNotEmpty>  <!-- 需求计划概述 -->
			rec_revisor	= #recRevisor#,   <!-- 修改人 -->
			rec_revise_time	= #recReviseTime#   <!-- 修改时间 -->
		WHERE id = #id#
	</update>

	<select id="queryDetail" parameterClass="java.util.Map" resultClass="com.baosight.wilp.rm.lj.domain.RmRequirePlanDetail">
		SELECT
			d.id	as "id",  <!-- 主键 -->
			d.plan_id	as "planId",  <!-- 年度计划ID -->
			d.mat_num	as "matNum",  <!-- 物资编码 -->
			d.mat_name	as "matName",  <!-- 物资名称 -->
			d.mat_type_id	as "matTypeId",  <!-- 物资分类ID -->
			d.mat_type_name	as "matTypeName",  <!-- 物资分类名称 -->
			d.mat_spec	as "matSpec",  <!-- 物资规格 -->
			d.mat_model	as "matModel",  <!-- 物资型号 -->
			d.unit	as "unit",  <!-- 计量单位 -->
			d.unit_name	as "unitName",  <!-- 计量单位 -->
			d.price	as "price",  <!-- 单价 -->
			d.num	as "num", <!-- 计划数量 -->
			d.picture_uri	as "pictureUri", <!-- 图片地址 -->
			p.plan_no	as "planNo"  <!-- 需求计划单号 -->
		FROM rm_require_plan_detail d
		left join rm_require_plan p on d.plan_id = p.id
		WHERE d.plan_id = #planId#
		order by d.mat_num
	</select>

	<select id="countDetail" parameterClass="java.util.Map" resultClass="int">
		SELECT COUNT(*) FROM rm_require_plan_detail WHERE plan_id = #planId#
	</select>

	<select id="queryBatchDetail" parameterClass="java.util.Map" resultClass="com.baosight.wilp.rm.lj.domain.RmRequirePlanDetail">
		SELECT
		    d.id,
			d.plan_id	as "planId",  <!-- 需求计划ID -->
			d.mat_num	as "matNum",  <!-- 物资编码 -->
			d.mat_name	as "matName",  <!-- 物资名称 -->
			d.mat_type_id	as "matTypeId",  <!-- 物资分类ID -->
			d.mat_type_name	as "matTypeName",  <!-- 物资分类名称 -->
			d.mat_spec	as "matSpec",  <!-- 物资规格 -->
			d.mat_model	as "matModel",  <!-- 物资型号 -->
			d.unit	as "unit",  <!-- 计量单位 -->
			d.unit_name	as "unitName",  <!-- 计量单位 -->
			d.price	as "price",  <!-- 单价 -->
			d.num	as "num", <!-- 计划数量 -->
			d.picture_uri	as "pictureUri", <!-- 图片地址 -->
			p.dept_name as "deptName", <!-- 需求科室 -->
			a.purchase_dept_num as "purchaseDeptNum",
			a.purchase_dept_name as "purchaseDeptName",
			a.allot_time as "allotTime",
			a.allot_man_no as "allotManNo",
			a.allot_man_name as "allotManName",
			a.back_reason as "backReason",
		    date_format(p.rec_create_time, '%Y-%m-%d %H:%i:%s') as "recCreateTimeStr"
		FROM rm_require_plan p
		left join rm_require_plan_detail d on p.id = d.plan_id
		left join rm_require_plan_allot a on d.id = a.id
		WHERE p.status_code in ('30', '40','50')
		<isNotEmpty prepend=" AND " property="hasCollect">
			d.has_collect = #hasCollect#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matNum">
			d.mat_num like concat('%', #matNum#, '%')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matName">
			d.mat_name like concat('%', #matName#, '%')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="purchaseDeptNum">
			a.purchase_dept_num = #purchaseDeptNum#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="deptName">
			p.dept_name like concat('%', #deptName#, '%')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matTypeNum">
			d.mat_type_id = #matTypeNum#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matTypeNum">
			d.mat_type_id = #matTypeNum#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="beginTime">
			p.rec_create_time >= concat(#beginTime#,' 00:00:00')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="endTime">
			p.rec_create_time <![CDATA[<=]]> concat(#endTime#, ' 23:59:59')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="beginAllotTime">
			a.allot_time >= concat(#beginAllotTime#,' 00:00:00')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="endAllotTime">
			a.allot_time <![CDATA[<=]]> concat(#endAllotTime#, ' 23:59:59')
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="status">
			a.status = #status#
		</isNotEmpty>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="orderBy">
				$orderBy$
			</isNotEmpty>
			<isEmpty property="orderBy">
				d.mat_num
			</isEmpty>
		</dynamic>
	</select>

	<select id="queryPlanDetail" parameterClass="java.util.Map" resultClass="com.baosight.wilp.rm.lj.domain.RmRequirePlanDetail">
		SELECT
		d.id	as "id",  <!-- 主键 -->
		d.plan_id	as "planId",  <!-- 需求计划ID -->
		p.plan_no   as "planNo",   <!-- 需求计划单号 -->
		d.mat_num	as "matNum",  <!-- 物资编码 -->
		d.mat_name	as "matName",  <!-- 物资名称 -->
		d.mat_type_id	as "matTypeId",  <!-- 物资分类ID -->
		d.mat_type_name	as "matTypeName",  <!-- 物资分类名称 -->
		d.mat_spec	as "matSpec",  <!-- 物资规格 -->
		d.mat_model	as "matModel",  <!-- 物资型号 -->
		d.unit	as "unit",  <!-- 计量单位 -->
		d.unit_name	as "unitName",  <!-- 计量单位 -->
		d.price	as "price",  <!-- 单价 -->
		d.num	as "num", <!-- 计划数量 -->
		d.picture_uri	as "pictureUri" <!-- 图片地址 -->
		FROM rm_require_plan p
		left join rm_require_plan_detail d on p.id = d.plan_id
		WHERE d.has_collect = 0
		<isNotEmpty prepend=" AND " property="deptNum">
			p.dept_num = #deptNum#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matNum">
			d.mat_num = #matNum#
		</isNotEmpty>
		<isNotEmpty prepend=" AND " property="matTypeId">
			d.mat_type_id = #matTypeId#
		</isNotEmpty>
		order by d.plan_id, d.mat_num
	</select>

	<insert id="insertDetail" parameterClass="java.util.List">
		INSERT INTO rm_require_plan_detail (
			id,  <!-- 主键 -->
			plan_id,  <!-- 年度计划ID -->
			mat_num,  <!-- 物资编码 -->
			mat_name,  <!-- 物资名称 -->
			mat_type_id,  <!-- 物资分类ID -->
			mat_type_name,  <!-- 物资分类名称 -->
			mat_spec,  <!-- 物资规格 -->
			mat_model,  <!-- 物资型号 -->
			unit,  <!-- 计量单位 -->
			unit_name,  <!-- 计量单位 -->
			price,  <!-- 单价 -->
			num,  <!-- 计划数量 -->
		    picture_uri,  <!-- 图片地址 -->
			has_collect  <!-- 是否已汇总 -->
		)
		VALUES
	    <iterate conjunction=",">
		(
		 	#detailList[].id#,
		 	#detailList[].planId#,
		 	#detailList[].matNum#,
		 	#detailList[].matName#,
		 	#detailList[].matTypeId#,
		 	#detailList[].matTypeName#,
		 	#detailList[].matSpec#,
		 	#detailList[].matModel#,
		 	#detailList[].unit#,
			#detailList[].unitName#,
		 	#detailList[].price#,
		 	#detailList[].num#,
			#detailList[].pictureUri#,
			#detailList[].hasCollect#
		 )
		</iterate>
	</insert>

	<delete id="deleteDetail" parameterClass="string">
		DELETE FROM rm_require_plan_detail WHERE plan_id = #value#
	</delete>

	<update id="updateDetailStatus" parameterClass="com.baosight.wilp.rm.lj.domain.RmRequirePlanDetail">
		update rm_require_plan_detail set has_collect = #hasCollect#
		where plan_id = #planId# and mat_num = #matNum#
	</update>

	<update id="updateRequirePlanUnFinish" parameterClass="string">
		update rm_require_plan set
		   status_code = IF((select sum(rpd.has_collect) from rm_require_plan_detail rpd where rpd.plan_id = rm_require_plan.id) > 0, '40', '30'),
		   status_name = IF(status_code = '30', '审批通过', '部分分配')
		where find_in_set(id, #planIds#)
	</update>

	<update id="updateRequirePlanFinish" parameterClass="string">
		update rm_require_plan set
		   status_code = IF((select count(1) from rm_require_plan_detail rpd
				where rpd.plan_id = rm_require_plan.id and rpd.has_collect = 0) > 0, '40', '50'),
		   status_name = IF(status_code = '40', '部分分配', '已分配')
		where find_in_set(id, #planIds#)
	</update>

	<select id="hasAllCollect" parameterClass="string" resultClass="int">
		select id from rm_require_plan_detail where plan_id = #planId# and has_collect = 0
	</select>

	<insert id="insertRequirePlanAllot" parameterClass="java.util.List">
		insert into rm_require_plan_allot (id,purchase_dept_num,purchase_dept_name,allot_time,allot_man_no,allot_man_name,back_reason, signature) values
		<iterate conjunction=",">
			(
			    #detailList[].id#,
				#detailList[].purchaseDeptNum#,
				#detailList[].purchaseDeptName#,
				#detailList[].allotTime#,
				#detailList[].allotManNo#,
				#detailList[].allotManName#,
				#detailList[].backReason#,
				#detailList[].signature#
			)
		</iterate>
	</insert>
	
	<update id="updateRequirePlanAllot" parameterClass="com.baosight.wilp.rm.lj.domain.RmRequirePlanDetail">
		update rm_require_plan_allot set back_reason = #backReason# where id = #id#
	</update>

	<delete id="deleteRequirePlanAllot" parameterClass="java.util.List">
		delete from rm_require_plan_allot where id in <iterate open="(" conjunction="," close=")">#ids[]#</iterate>
	</delete>

	<update id="updateAllotStatus" parameterClass="java.util.Map">
		update rm_require_plan_allot set `status` = #status#
			where id = (select d.id from rm_require_plan_detail d where d.plan_id=#planId# and d.mat_num = #matNum#)
	</update>

	<select id="hasGenPurchasePlan" parameterClass="java.util.Map">
		select id from rm_require_plan_detail d left join rm_require_plan_allot a on d.id = a.id
		where a.status = '1' and d.plan_id = #planId# and d.mat_num = #matNum#
	</select>

	<select id="queryHistoryClaim" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select
			sod.mat_num matNum,
			sod.mat_name matName,
			sod.mat_spec matSpec,
			sod.mat_model matModel,
			sod.mat_type_num matTypeId,
			sod.mat_type_name matTypeName,
			sod.unit unit,
			sod.unit_name unitName,
			out_price price,
			0 num,
			sum(IF(so.out_type = '05', -1*out_num,out_num)) historyNum
		from si_out so
		left join si_out_detail sod on so.out_bill_no = sod.out_bill_no
		join rm_temp_mat rtm on sod.mat_num = rtm.mat_num
		where 1=1
		<isNotEmpty prepend="and" property="costDepts">
			so.cost_dept_num in
			<iterate property="costDepts" open="(" conjunction="," close=")">#costDepts[]#</iterate>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="beginTime">
			so.bill_make_time >= concat(#beginTime#,' 00:00:00')
		</isNotEmpty>
		<isNotEmpty prepend="and" property="endTime">
			so.bill_make_time <![CDATA[<=]]> concat(#endTime#, ' 23:59:59')
		</isNotEmpty>
		group by sod.mat_num order by historyNum desc
	</select>

	<select id="queryRequireFlow" parameterClass="string" resultClass="java.util.HashMap">
		select
			dept_name deptName,
			DATE_FORMAT(rec_create_time, '%Y-%m-%d') applyDate,
			plan_desc planDesc,
			signature applySign,
			if(approval_result_code = '30', '同意', reject_reason) approvalAdvice,
			sign_img approvalSign,
			(select a.signature from rm_require_plan_detail d join rm_require_plan_allot a on d.id=a.id where d.plan_id = rrp.id limit 1) zcSign
		from rm_require_plan rrp
		left join rm_approval ra on rrp.id = ra.relate_id and ra.status = '1'
		where rrp.plan_no = #planNo#
	</select>
</sqlMap>